* Начало работы

Так как все действия делаются от имени определённого человека, то
имя автора должно быть зафиксировано в пользовательских настройках:

#+BEGIN_SRC bash
git config --global user.name "Ivanoff Peter Sidorovich"
git config --global user.email ips@example.org
#+END_SRC

либо в настройках конкретного проекта:

#+BEGIN_SRC bash
git config          user.name "Ivanoff Peter Sidorovich"
git config          user.email ips@example.org
#+END_SRC

Можно подправить вручную в текстовом файле:
- настроек пользователя
#+BEGIN_SRC bash
~/.gitconfig
#+END_SRC
- настроек проекта
#+BEGIN_SRC bash
путь/до/вашего/проекта/.git/config
#+END_SRC

* Создание репозитория
В начале выбираем название проекта. Далее в тексте фигурирует название
каталога для проектов "project" и название инновационного проекта по
разработке "velocipede". Вам необходимо придумать собственное
название.

Необходимо создать каталог проекта
#+BEGIN_SRC bash 
mkdir velocipede
#+END_SRC

и перейти в него
#+BEGIN_SRC bash
cd velocipede
#+END_SRC


* Инициализация репозитория
#+BEGIN_SRC bash
git init
#+END_SRC

Внутри каталога с проектом будет создан каталог ".git" с
инфраструктурой репозитория.

* Добавление файлов в репозиторий

После команды "git add" следует список добавляемых файлов разделённых
пробелами
#+BEGIN_SRC bash
git add          list.txt   of.org   my/files.txt
#+END_SRC

Пожалуйста, не делайте так (как минимум до тех пор, пока не создадите
~/.gitignore_global и path/to/project/.gitignore):
#+BEGIN_SRC bash
git add .
git add *
git add **/*
#+END_SRC


* Желательные файлы
** Описание проекта
Простой текстовый файл содержащий краткое описание проекта.
*** Название файла может варьироваться: 
- README
- README.txt
- README.md
- README.org

*** Текстовый файл обычно содержит:
- описание самого файла
- копирайт год и имя автора
- подробности (e-mail) об авторе или авторах
- название лицензии под которой распространяется проект
- ключевые слова
- краткое описание проекта
- краткий способ сборки, запуска или просмотра
- история проекта
- зависимости (например для программы - используемые библиотеки)

*** Пример

(в примере используется лицензия GPL)

#+BEGIN_SRC bash
README.org --- описание проекта

Copyright (C) 2012 Ivanoff Peter Sidorovich

Автор: Ivanoff Peter Sidorovich <ips@example.org>

  This file is part of velocipede.

  velocipede is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  velocipede is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with velocipede.  If not, see <http://www.gnu.org/licenses/>.



 * Ключевые слова:

   велосипед колесо быстрое перемещение пространство



 * Описание:

   Разработка уникального проекта по созданию невиданного ранее
   устройства осуществляющего перемещение человека из пункта А в пункт
   Б, затрачивая при этом только одну ложку борща на километр пути.



 * Использование:

   просто используйте это так:
   a) в пункте А сядьте на велосипед
   b) задайте направление рулём на пункт В
   c) дрыгайте ножками, пока не почувствуете усталость (ложка борща)
   d) если не достигли пункта В перейдите к пункту b
   e) через некоторое время вы попадёте в пункт B



 * История:

   Проект создан 3015-05-19



 * Зависимости:

   - Набор "Юный велосипедостроитель" из ближайшего магазина
   - Синяя липкая лента
#+END_SRC

** Полный текст лицензионного соглашения
*** Название файла может варьироваться: 
- COPYING
- COPYING.txt
- COPYING.md
- COPYING.org
*** Типы лицензии
(перечислены только наиболее распространённые)
- /BSD/ Свободное программное обеспечение. Делайте с программой что
  хотите: запускайте, изучайте, копируйте, изменяйте, распространяйте,
  продавайте. Но оставьте информацию об авторе и о том, что автор не
  несёт никакой ответственности и ничего не гарантирует.
- /GNU GPL/ Свободное программное обеспечение. Делайте с программой
  что хотите: запускайте, изучайте, копируйте, изменяйте,
  распространяйте, продавайте. Но оставьте информацию об авторе и о
  том, что автор не несёт никакой ответственности и ничего не
  гарантирует. Также сохраните лицензию GPL на программу и её
  реинкарнации (форки).
- /Creative Commons/ Например: CC-BY-SA
  (https://creativecommons.org/licenses/by-sa/4.0/deed.ru)
  Для любых произведений (фотографий, рисунков, текстов, ...)
- /EULA/ (проприетарное лицензионное соглашение с конечным
  пользователем) - договор между владельцем (автором) компьютерной
  программы и +рабом+ пользователем её копии. В случае EULA,
  необходимо привести полный текст лицензии:
  
  Студенту, желающему сдать работу и выбравшему в качестве лицензии
  EULA, требуется написать конечное соглашение пользователя в котором
  для примера, но не для бездумного копирования, используется в
  качестве основы следующее описание: в котором описываются
  ограничения включающие, но не ограничивающиеся, запрещением
  просмотра исходного кода и его изучения (только под NDA - соглашение
  о неразглашении продажи бессмертной души), запрещение
  распространения, запрещение несанкционированного и несогласованного
  с высшим руководством запуска программы, запрещение продажи без
  покупки дистрибьюторских прав, банальные зонды и прочие соглашения
  почти не нарушающие конституцию и права человека, если будет
  доказано, что пользователь действительно и неоспоримо на момент
  заключения договора и в течении всего времени на которое
  распространяется действие договора, являлся человеком, причём без
  возможности получения прямой либо косвенной выгоды, в том числе либо
  материальной либо нематериальной выгоды, включая использование
  данного соглашения без изменения его сути и содержания,
  ограничиваясь только 10 (десятью) страницами мелкого, трудно
  читаемого текста.





* Запись изменений

Для того чтобы сохранить (зафиксировать, закоммитить, разместить, запечатлеть)
изменения внутри репозитория необходимо использовать команду:
#+BEGIN_SRC bash
git commit -m "описание коммита"
#+END_SRC

либо для добавления более подробного описания:
#+BEGIN_SRC bash
git commit
#+END_SRC




* Метки

Метки позволяют отметить важные моменты в истории проекта

Просмотр списка меток
#+BEGIN_SRC bash
git tag
#+END_SRC

Просмотр свойств метки
#+BEGIN_SRC bash
git show simple_label
#+END_SRC

** Простые метки
#+BEGIN_SRC bash
git tag sipmple_label
#+END_SRC

** Аннотированные метки
#+BEGIN_SRC bash
git tag -a label_v1 -m 'description for v1'
#+END_SRC

** Подписанные метки
#+BEGIN_SRC bash
git tag -s v2 -m 'signed tag for v2'
#+END_SRC

